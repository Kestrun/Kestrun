name: CodeQL (core)

on:
  workflow_call:
    inputs:
      is_pr:
        description: Whether the workflow runs for a pull request context.
        required: true
        type: boolean

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: codeql-${{ github.repository }}-${{ inputs.is_pr && github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Linting
    uses: Kestrun/Kestrun/.github/workflows/lint-core.yml@main
    with:
      is_pr: ${{ inputs.is_pr }}

  # --- CodeQL for C# and GitHub Actions ---
  codeql:
    name: CodeQL (${{ matrix.language }})
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      actions: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [csharp, actions]
    steps:
      - uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # queries: security-extended  # optional

      # Build C# so DLLs exist (if applicable)
      - name: ðŸ§° Setup .NET 8/9
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: ðŸ§° Install Invoke-Build
        shell: pwsh
        run: Install-Module InvokeBuild -Force -Scope CurrentUser

      - name: ðŸ“¦ Restore solution
        shell: pwsh
        run: Invoke-Build Restore -DotNetVerbosity minimal

      - name: ðŸ”§ Run C# Build
        shell: pwsh
        run: Invoke-Build Build -DotNetVerbosity minimal

      - name: Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  # --- PowerShell via PSScriptAnalyzer -> SARIF upload ---
  pssa:
    name: PowerShell (PSScriptAnalyzer)
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      security-events: write  # needed to upload SARIF
    steps:
      - uses: actions/checkout@v5

      # Run PSScriptAnalyzer and produce SARIF
      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.0
        with:
          path: ./src/PowerShell   # adjust to where your .ps1/.psm1 live
          recurse: true
          output: pwsh-results.sarif

      # Upload SARIF to GitHub code scanning
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pwsh-results.sarif
