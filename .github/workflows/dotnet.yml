permissions:
  contents: read
name: .NET and PowerShell Tests

on:
  push:
    paths:
      - '**/*.cs'
      - '**/*.csproj'
      - '**/*.sln'
      - '**/*.ps1'
      - '**/*.psm1'
      - '**/*.psd1'
      - '**/*.yml'
      - '**/*.yaml'
      - tests/**
  pull_request:
    paths:
      - '**/*.cs'
      - '**/*.csproj'
      - '**/*.sln'
      - '**/*.ps1'
      - '**/*.psm1'
      - '**/*.psd1'
      - '**/*.yml'
      - '**/*.yaml'
      - tests/**

jobs:
  build:
    # Try both runners; ubuntu-24.04 vs 22.04 can matter for native deps/resolution
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}

    env:
      # Super verbose host/loader tracing (turn off when green)
      COREHOST_TRACE: 1
      COREHOST_TRACE_VERBOSITY: 3
      DOTNET_HOST_TRACE: 1
      DOTNET_HOST_TRACE_VERBOSITY: 3
      # Keep PowerShell clean; no surprises from profiles
      POWERSHELL_DISTRIBUTION_CHANNEL: GitHub-Actions

    steps:
    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v4

    - name: üß∞ Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: üß∞ Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: üß∞ Install Module Invoke-Build
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'
        Install-Module InvokeBuild -Force -Scope CurrentUser

    - name: üß∞ Install Module Pester (pin for determinism)
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'
        # Pin a version you know works; adjust if needed
        Install-Module Pester -Force -Scope CurrentUser -RequiredVersion 5.6.1
        Get-Module Pester -ListAvailable | Select Name,Version,Path

    - name: üîé Print runtime context
      shell: pwsh
      run: |
        $PSVersionTable
        dotnet --info
        [System.Runtime.InteropServices.RuntimeInformation]::FrameworkDescription
        [System.Environment]::Version

    - name: üì¶ Restore (and list transitive Roslyn versions)
      shell: pwsh
      run: |
        dotnet restore
        # Show exactly which Roslyn packages/versions are in play
        dotnet list . package --include-transitive | Select-String -SimpleMatch "Microsoft.CodeAnalysis"

    - name: üìÇ List Roslyn candidates in repo
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -File -Include Microsoft.CodeAnalysis*.dll,System.Collections.Immutable*.dll,System.Reflection.Metadata*.dll |
          Sort-Object FullName |
          Select-Object FullName, Length |
          Format-Table -Auto

    - name: üîß Run C# Build
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'
        Invoke-Build Build

    - name: üß™ Mini Roslyn sanity check (before Pester)
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'
        # Import your module exactly like tests do
        Import-Module ./src/PowerShell/Kestrun/Kestrun.psd1 -Force
        # Dump which *CodeAnalysis* assemblies are loaded and from where
        [AppDomain]::CurrentDomain.GetAssemblies() |
          Where-Object { $_.GetName().Name -like 'Microsoft.CodeAnalysis*' -or $_.GetName().Name -in 'System.Collections.Immutable','System.Reflection.Metadata' } |
          Select FullName, Location | Format-Table -Auto

        # Optional: touch the same code path your tests touch
        # e.g. a tiny compile to force Roslyn load:
        if ([type]::GetType('Kestrun.Scripting.CSharpDelegateBuilder')) {
          [Kestrun.Scripting.CSharpDelegateBuilder]::Compile('int x=1;')
        }

    - name: üß™ Run Tests
      shell: pwsh
      run: |
        $ErrorActionPreference = 'Stop'
        # No profiles; fewer surprises
        pwsh -NoLogo -NoProfile -Command 'Invoke-Build Test'

    - name: üì§ Upload diagnostics on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: diagnostics-${{ matrix.os }}
        path: |
          **/TestResults/**
          **/bin/**
          **/obj/project.assets.json
          src/PowerShell/Kestrun/**/*
          ./*.log

    - name: üßë‚Äçüíª Live SSH (only if failed)
      if: failure()
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
