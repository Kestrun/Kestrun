permissions:
  contents: read

name: AV scan (ClamAV)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [main]

jobs:
  clamav:
    runs-on: ubuntu-24.04
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v5
       
      - name: 🧰 Install PowerShell
        uses: ./.github/actions/Install-PowerShell
        with:
          Version: 'latest'

      - name: 🧰 Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          cache: true
          cache-dependency-path: |
            **/*.csproj
            **/packages.lock.json

      - name: 🧰 Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: 🧰 Install Module Invoke-Build
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          Install-Module InvokeBuild -Force -Scope CurrentUser

      - name: 🔎 Print runtime context
        shell: pwsh
        run: |
          $PSVersionTable
          dotnet --info
          [System.Runtime.InteropServices.RuntimeInformation]::FrameworkDescription
          [System.Environment]::Version

      - name: 📦 Restore solution
        shell: pwsh
        run: Invoke-Build Restore

      - name: 🔧 Run C# Build (normal)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          Invoke-Build Build -Configuration 'Release'

      # --- ClamAV section (full-repo scan) ---
      - name: 🧰 Install ClamAV
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon

      - name: 🧼 Update ClamAV signatures
        shell: bash
        run: |
          set -euo pipefail
          sudo systemctl stop clamav-freshclam || true
          # Avoid file-lock logging noise in CI
          sudo sed -i 's/^UpdateLogFile .*/# disabled in CI/' /etc/clamav/freshclam.conf || true
          sudo freshclam --stdout

      - name: 🛡️ Scan full repo recursively
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          set -euo pipefail
          # clamscan: 0=clean, 1=infected, 2=error
          # Run once, keep full output in clamscan.full.log; show only infected on-console.
          clamscan -r . --no-summary --exclude-dir="^\.\/\.git$" \
            | tee clamscan.full.log \
            | grep 'FOUND$' | tee clamscan.infected.only.log >/dev/null || true

          # Accurate counts:
          # - scanned: lines that end in OK / FOUND / ERROR (all per-file outcomes)
          # - infected: lines ending in FOUND
          scanned=$(grep -Ec ':( OK| FOUND| ERROR)$' clamscan.full.log || true)
          infected=$(grep -c 'FOUND$' clamscan.full.log || true)

          {
            echo "----------- SCAN SUMMARY -----------"
            echo "Scanned files: $scanned"
            echo "Infected files: $infected"
          } | tee clamscan.summary.log

          # Final compact log: only infected findings + summary
          cat clamscan.infected.only.log clamscan.summary.log > clamscan.log

      - name: 📊 Print scan summary
        shell: bash
        run: |
          echo "----------- SCAN SUMMARY -----------"
          cat clamscan.log

      - name: ⛔ Fail if infected
        shell: bash
        run: |
          ! grep -q "Infected files: [^0]" clamscan.log

      - name: 📎 Upload scan log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: clamscan-log
          path: clamscan.log
